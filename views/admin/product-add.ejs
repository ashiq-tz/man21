<%- include("../../views/partials/admin/header") %>
<%- include("../../views/partials/admin/sidebar", { activePage: 'add-products' }) %>

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
  <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
  <style>
    /* Container & Card */
    .content-main {
      padding: 20px;
    }
    .card {
      border: none;
      border-radius: 8px;
      box-shadow: 0 1px 5px rgba(0,0,0,0.1);
      margin-bottom: 30px;
    }
    /* Form Controls */
    .form-control {
      width: 100%;
      padding: 0.75rem;
      font-size: 1rem;
    }
    .form-label {
      font-weight: 500;
    }
    /* Sizes & Stock */
    #sizesContainer {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-top: 10px;
    }
    .size-card {
      border: 1px solid #ccc;
      border-radius: 6px;
      width: 120px;
      padding: 10px;
      text-align: center;
      transition: box-shadow 0.3s ease;
    }
    .size-card:hover {
      box-shadow: 0 2px 8px rgba(0,0,0,0.2);
    }
    .size-card.active {
      border-color: #007bff;
      box-shadow: 0 2px 8px rgba(0,123,255,0.4);
    }
    .size-card input[type="number"] {
      width: 100%;
      margin-top: 10px;
    }
    /* Image Preview & Cropper */
    .final-cropped {
      display: none;
      margin-top: 10px;
      max-width: 40%;
      border: 1px solid #ddd;
      border-radius: 4px;
    }
    .image-cropper {
      display: none;
      margin-top: 10px;
      width: 100%;
    }
    .thumbnail {
      position: relative;
      display: inline-block;
      margin-right: 10px;
    }
    .thumbnail img {
      border-radius: 4px;
      max-width: 50px;
      height: auto;
    }
    .remove-icon {
      position: absolute;
      top: -5px;
      right: -5px;
      background: #ff0000;
      color: #fff;
      border-radius: 50%;
      padding: 2px 5px;
      cursor: pointer;
      font-size: 12px;
    }
    /* Error Messages */
    .error-message {
      color: red;
      font-size: 0.875rem;
      margin-top: 5px;
    }
  </style>
</head>

<section class="content-main container-fluid">
  <div class="row">
    <div class="col-12">
      <div class="content-header mb-4">
        <h2 class="content-title">Add New Product</h2>
      </div>
      <div class="card">
        <div class="card-body">
          <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
            <!-- Row 1: Product Name, Brand, Category -->
            <div class="row mb-3">
              <div class="col-md-4">
                <label for="product_name" class="form-label">Product Name</label>
                <input 
                  type="text" 
                  placeholder="Type here" 
                  name="productName" 
                  id="product_name" 
                  class="form-control"
                >
                <div id="productName-error" class="error-message"></div>
              </div>
              <!-- Brand -->
              <div class="col-md-4">
                <label class="form-label">Brand</label>
                <select class="form-select" name="brand">
                  <option value="" disabled selected>Select Brand</option>
                  <% for(let i = 0; i < brand.length; i++) { %>
                    <option value="<%= brand[i].brandName %>">
                      <%= brand[i].brandName %>
                    </option>
                  <% } %>
                </select>
                <div id="brand-error" class="error-message"></div>
              </div>
              <!-- Category -->
              <div class="col-md-4">
                <label class="form-label">Category</label>
                <select class="form-select" name="category">
                  <option value="" disabled selected>Select Category</option>
                  <% for(let i = 0; i < cat.length; i++) { %>
                    <option value="<%= cat[i].name %>">
                      <%= cat[i].name %>
                    </option>
                  <% } %>
                </select>
                <div id="category-error" class="error-message"></div>
              </div>
            </div>

            <!-- Row 2: Full Description, Regular Price, Sale Price, Color -->
            <div class="row mb-3">
              <div class="col-md-6">
                <label class="form-label">Full Description</label>
                <textarea 
                  placeholder="Type here" 
                  id="descriptionid" 
                  name="description" 
                  rows="3" 
                  class="form-control"
                ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <!-- Regular Price -->
              <div class="col-md-2">
                <label class="form-label">Regular Price</label>
                <input 
                  placeholder="₹" 
                  name="regularPrice" 
                  type="text" 
                  class="form-control"
                >
                <div id="regularPrice-error" class="error-message"></div>
              </div>
              <!-- Sale Price -->
              <!-- <div class="col-md-2">
                <label class="form-label">Sale Price</label>
                <input 
                  placeholder="₹" 
                  name="salePrice" 
                  type="text" 
                  class="form-control"
                >
                <div id="salePrice-error" class="error-message"></div>
              </div> -->
              <!-- Color -->
              <div class="col-md-2">
                <label class="form-label">Color</label>
                <input 
                  name="color" 
                  type="text" 
                  class="form-control"
                >
                <div id="color-error" class="error-message"></div>
              </div>
            </div>

            <!-- Sizes & Stock -->
            <div class="mb-4">
              <label class="form-label">Sizes &amp; Stock</label>
              <div id="sizesContainer">
                <% [5,6,7,8,9,10].forEach(function(sz) { %>
                  <div class="size-card" id="card_<%= sz %>">
                    <div>
                      <input 
                        type="checkbox" 
                        name="size" 
                        id="size_<%= sz %>" 
                        value="<%= sz %>" 
                        onchange="toggleStockInput(this, '<%= sz %>')"
                      >
                      <label for="size_<%= sz %>">Size <%= sz %></label>
                    </div>
                    <input 
                      type="number" 
                      name="stock_<%= sz %>" 
                      placeholder="Enter stock" 
                      min="0" 
                      disabled
                    >
                  </div>
                <% }); %>
              </div>
              <div id="size-error" class="error-message"></div>
            </div>

            <!-- Images Section: 2 images per row -->
            <div class="card mb-3">
              <div class="card-header">
                <h4>Choose Images</h4>
              </div>
              <div class="card-body">
                <!-- Thumbnails Container -->
                <div class="mb-3">
                  <div id="addedImagesContainer"></div>
                </div>

                <!-- Loop: 2 images per row -->
                <div id="images-error" class="error-message"></div>

                <% for (let i = 1; i <= 4; i += 2) { %>
                  <div class="row mb-3">
                    <!-- Image i -->
                    <div class="col-md-6">
                      <div class="card p-3">
                        <img 
                          src="" 
                          alt="Preview" 
                          id="imgView<%= i %>" 
                          class="mb-2" 
                          style="max-width: 100%; border: 1px solid #ddd; border-radius: 4px;"
                        >
                        <img 
                          src="" 
                          alt="Cropped Preview" 
                          id="finalCropped<%= i %>" 
                          class="final-cropped"
                        >
                        <input 
                          type="file" 
                          name="images" 
                          id="input<%= i %>" 
                          accept="image/png, image/jpeg, image/jpg" 
                          class="form-control" 
                          onchange="viewImage(event, <%= i %>)"
                        >
                        <div id="images-error<%= i %>" class="error-message"></div>
                        <div 
                          class="image-cropper d-flex flex-column align-items-center" 
                          style="width: 100%;"
                        >
                          <img 
                            src="" 
                            id="croppedImg<%= i %>" 
                            alt="" 
                            style="max-width: 100%; border: 1px solid #ddd; border-radius: 4px;"
                          >
                          <button 
                            type="button" 
                            id="saveButton<%= i %>" 
                            class="btn btn-primary mt-2"
                          >
                            Save
                          </button>
                        </div>
                      </div>
                    </div>
                    <!-- Image i+1 -->
                    <div class="col-md-6">
                      <div class="card p-3">
                        <img 
                          src="" 
                          alt="Preview" 
                          id="imgView<%= i+1 %>" 
                          class="mb-2" 
                          style="max-width: 100%; border: 1px solid #ddd; border-radius: 4px;"
                        >
                        <img 
                          src="" 
                          alt="Cropped Preview" 
                          id="finalCropped<%= i+1 %>" 
                          class="final-cropped"
                        >
                        <input 
                          type="file" 
                          name="images" 
                          id="input<%= i+1 %>" 
                          accept="image/png, image/jpeg, image/jpg" 
                          class="form-control" 
                          onchange="viewImage(event, <%= i+1 %>)"
                        >
                        <div id="images-error<%= i+1 %>" class="error-message"></div>
                        <div 
                          class="image-cropper d-flex flex-column align-items-center" 
                          style="width: 100%;"
                        >
                          <img 
                            src="" 
                            id="croppedImg<%= i+1 %>" 
                            alt="" 
                            style="max-width: 100%; border: 1px solid #ddd; border-radius: 4px;"
                          >
                          <button 
                            type="button" 
                            id="saveButton<%= i+1 %>" 
                            class="btn btn-primary mt-2"
                          >
                            Save
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                <% } %>
              </div>
            </div>

            <!-- Publish Button -->
            <div class="text-start">
              <button class="btn btn-success btn-lg" type="button" onclick="validateAndSubmit()">
                Publish
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>

<script>
  // Toggle stock input and highlight size card
  function toggleStockInput(checkbox, size) {
    const stockInput = document.querySelector(`input[name="stock_${size}"]`);
    const card = document.getElementById("card_" + size);
    if (checkbox.checked) {
      stockInput.disabled = false;
      stockInput.required = true;
      card.classList.add("active");
    } else {
      stockInput.disabled = true;
      stockInput.required = false;
      stockInput.value = "";
      card.classList.remove("active");
    }
  }

  function validateAndSubmit() {
    if (validateForm()) {
      document.forms[0].submit();
    }
  }

  // Image preview and cropper setup
  function viewImage(event, index) {
    const input = event.target;
    if (!input.files || input.files.length === 0) return;
    const file = input.files[0];
    const reader = new FileReader();
    reader.onload = function () {
      const dataUrl = reader.result;
      const image = document.getElementById("imgView" + index);
      image.src = dataUrl;
      image.onload = function () {
        if (image.cropper) {
          image.cropper.destroy();
        }
        const cropper = new Cropper(image, {
          aspectRatio: 1, 
          viewMode: 2,
          guides: true,
          background: false,
          autoCropArea: 1,
          zoomable: true
        });
        const cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
        cropperContainer.style.display = "flex";
        let saveButton = document.getElementById("saveButton" + index);
        let newSaveButton = saveButton.cloneNode(true);
        saveButton.parentNode.replaceChild(newSaveButton, saveButton);

        newSaveButton.addEventListener("click", function () {
          const croppedCanvas = cropper.getCroppedCanvas();
          if (!croppedCanvas) {
            console.error("Cropped canvas not available.");
            return;
          }
          const finalCropped = document.getElementById("finalCropped" + index);
          finalCropped.src = croppedCanvas.toDataURL("image/jpeg", 1.0);
          finalCropped.style.display = "block";
          const timestamp = new Date().getTime();
          const filename = `cropped-img-${timestamp}-${index}.png`;
          croppedCanvas.toBlob(blob => {
            if (blob) {
              const fileInput = document.getElementById("input" + index);
              const imgFile = new File([blob], filename, { type: blob.type });
              const fileList = new DataTransfer();
              fileList.items.add(imgFile);
              fileInput.files = fileList.files;
            }
          }, "image/png");
          cropper.destroy();
          cropperContainer.style.display = "none";
        });
      };
    };
    reader.readAsDataURL(file);
  }

  // Thumbnail handling
  const selectedImages = [];
  document.getElementById("input1").addEventListener("change", handleFileSelect);
  document.getElementById("input2").addEventListener("change", handleFileSelect);
  document.getElementById("input3").addEventListener("change", handleFileSelect);
  document.getElementById("input4").addEventListener("change", handleFileSelect);

  function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      selectedImages.push(file);
      const thumbnail = document.createElement("div");
      thumbnail.classList.add("thumbnail");

      const img = document.createElement("img");
      img.src = URL.createObjectURL(file);
      img.alt = "thumbnail";

      const removeIcon = document.createElement("span");
      removeIcon.classList.add("remove-icon");
      removeIcon.innerHTML = "&times;";
      removeIcon.addEventListener("click", function () {
        const index = selectedImages.indexOf(file);
        if (index !== -1) {
          selectedImages.splice(index, 1);
        }
        thumbnail.remove();
      });

      thumbnail.appendChild(img);
      thumbnail.appendChild(removeIcon);
      addedImagesContainer.appendChild(thumbnail);
    }
  }

  // Form validation
  function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    // const saleprice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const images = document.getElementById('input1');
    let isValid = true;

    if (name.trim() === "") {
      displayErrorMessage('productName-error', 'Please enter a product name.');
      isValid = false;
    } else if (!/^[a-zA-Z0-9\s]+$/.test(name.trim())) {
      displayErrorMessage('productName-error', 'Product name can only contain letters, numbers, or spaces.');
      isValid = false;
    }

    if (description.trim() === "") {
      displayErrorMessage('description-error', 'Please enter a product description.');
      isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
      displayErrorMessage('description-error', 'Description can only contain letters and spaces.');
      isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
      displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
      isValid = false;
    }

    // if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
    //   displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
    //   isValid = false;
    // }

    // if (parseFloat(price) <= parseFloat(saleprice)) {
    //   displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
    //   isValid = false;
    // }

    if (color.trim() === "") {
      displayErrorMessage('color-error', 'Please enter a color.');
      isValid = false;
    }

    if (images.files.length === 0) {
      displayErrorMessage("images-error", 'Please select at least one image.');
      isValid = false;
    }

     // image‐type check
    const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
    for (let i = 1; i <= 4; i++) {
      const input = document.getElementById(`input${i}`);
      if (input.files.length > 0) {
        if (!allowedTypes.includes(input.files[0].type)) {
          displayErrorMessage(`images-error${i}`, 'Invalid Format! Only JPG and PNG images are allowed.');
          return false;
        }
      }
    }

    return isValid;
  }



  function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
  }

  function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
      element.innerText = '';
    });
    // specifically clear the image errors too
    for (let i = 1; i <= 4; i++) {
      document.getElementById(`images-error${i}`).innerText = '';
    }
  }

  // SweetAlert popup if product add is successful
  const urlParams = new URLSearchParams(window.location.search);
  if (urlParams.get('success') === 'true') {
    Swal.fire({
      title: 'Product added successfully!',
      text: 'Your product has been saved to the database.',
      icon: 'success',
      confirmButtonText: 'OK'
    });
  }
</script>
