<%- include("../../views/partials/admin/header") %>
<%- include("../../views/partials/admin/sidebar", { activePage: 'category' } ) %>

<head>
  <!-- SweetAlert2 CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    /* Overall page styling */
    body {
      background-color: #f9f9f9;
      font-family: "Helvetica Neue", Arial, sans-serif;
    }
    .content-main {
      padding: 20px;
      margin: 0 auto;
      max-width: 1400px; /* Increase max-width for a wider layout */
    }

    /* Header */
    .content-header {
      margin-bottom: 20px;
    }
    .content-header h2 {
      font-weight: 600;
      font-size: 28px;
    }

    /* Search Bar Container */
    .search-container {
      margin: 0 auto 30px auto;
      max-width: 600px;
    }
    .search-container .input-group {
      border-radius: 50px;
      overflow: hidden;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    .search-container .form-control {
      border: none !important;
      padding: 16px 20px;
    }
    .search-container .btn {
      border: none !important;
      background-color: #007bff;
      color: #fff;
      padding: 0 20px;
    }
    .search-container .btn:hover {
      background-color: #0056b3;
    }

    /* Card-like container for content */
    .card {
      border: none;
      background-color: transparent;
    }

    /* Category Form */
    .category-form {
      width: 300px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      padding: 20px;
    }
    .category-form .form-label {
      font-weight: 600;
    }
    .category-form .form-control {
      border-radius: 6px;
      border: 1px solid #ccc;
    }
    .category-form .btn-primary {
      background-color: #007bff;
      border-radius: 30px;
      border: none;
      padding: 10px 20px;
    }
    .category-form .btn-primary:hover {
      background-color: #0056b3;
    }
    .error-message {
      color: red;
      font-size: 0.9em;
    }

    /* Table Styles */
    .table-container {
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      padding: 0px;
      margin-left: -20px;
    }
    table.table {
      width: 100%;
      margin-bottom: 0;
      font-size: 0.95rem;
    }
    table.table thead th {
      background-color: #f1f1f1;
      font-weight: 600;
      border-bottom: 2px solid #ddd;
    }
    table.table td, table.table th {
      padding: 16px;
      vertical-align: middle;
    }
    /* Buttons inside the table */
    .btn-warning, .btn-danger, .btn-success {
      border-radius: 30px;
      font-size: 0.85rem;
      border: none;
      margin-bottom: 5px;
    }
    .btn-warning a, .btn-danger a, .btn-success a {
      color: #fff;
      text-decoration: none;
    }
    .btn-warning:hover {
      background-color: #138496 !important;
    }
    .btn-danger:hover {
      background-color: #c82333 !important;
    }
    .btn-success:hover {
      background-color: #218838 !important;
    }
    /* Badges for Status */
    .badge {
      padding: 0.5em 0.75em;
      font-size: 0.8rem;
      border-radius: 10px;
      display: inline-block;
      text-align: center;
    }
    .badge.alert-success {
      background-color: #28a745;
      color: #fff;
    }
    .badge.alert-danger {
      background-color: #dc3545;
      color: #fff;
    }

    /* Pagination */
    .pagination-container {
      text-align: center;
      margin-top: 20px;
    }
    .pagination {
      display: inline-block;
    }
    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 8px 12px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
      border-radius: 4px;
    }
    .pagination a:hover {
      background-color: #f5f5f5;
    }
    .pagination .disabled {
      color: #aaa;
      cursor: not-allowed;
    }
  </style>
</head>

<body>
  <section class="content-main">
    <div class="content-header text-center">
      <h2 class="content-title">Category</h2>
    </div>

    <!-- Search Bar -->
    <div class="search-container">
      <form action="/admin/category/" method="get" class="input-group">
        <input 
          id="searchInput"
          type="text" 
          class="form-control" 
          placeholder="Search categories..." 
          name="search"
          aria-label="Search categories"
        />

        <button class="btn" type="submit">Search</button>
      </form>
    </div>

    <!-- Main Row -->
    <div class="row g-3">
      <!-- Category Creation Form -->
      <div class="col-md-4">
        <div class="category-form">
          <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)" id="addCategoryForm">
            <div class="mb-3">
              <label for="product_name" class="form-label">Name</label>
              <input 
                type="text" 
                name="name" 
                placeholder="Enter category name" 
                class="form-control" 
                id="product_name" 
                required
              />
              <div id="name-error" class="error-message"></div>
            </div>
            <div class="mb-3">
              <label for="descriptionId" class="form-label">Description</label>
              <textarea 
                placeholder="Enter category description" 
                name="description" 
                class="form-control" 
                id="descriptionId" 
                rows="4"
                required
              ></textarea>
              <div id="description-error" class="error-message"></div>
            </div>
            <div class="d-grid mt-4">
              <button class="btn btn-primary" type="submit">
                Create category
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Categories Table -->
      <div class="col-md-8">
        <div class="table-container">
          <table class="table table-hover align-middle">
            <thead>
              <tr>
                <th class="text-center" style="width: 5%;">No:</th>
                <th style="width: 15%;">Name</th>
                <th style="width: 25%;">Description</th>
                <th style="width: 10%;">Offer Price</th>
                <th style="width: 15%;">Offer</th>
                <th style="width: 10%;">Status</th>
                <th style="width: 15%;">List/Unlist</th>
                <th class="text-center" style="width: 5%;">Edit</th>
              </tr>
            </thead>
            <tbody id="categoryTableBody">
              <% if (categories && categories.length > 0) { %>
                <% categories.forEach(function(category, index) { %>
                  <tr>
                    <td class="text-center"><%= index + 1 %></td>
                    <td><%= category.name %></td>
                    <td><%= category.description %></td>

                    <td><%= category.categoryOffer && category.categoryOffer > 0 ? category.categoryOffer + "%" : "0%" %></td>
             
                    <td>
                      <div class="d-flex flex-column">
                        <% if (!category.categoryOffer || category.categoryOffer === 0) { %>  
                        <button class="btn btn-warning" style="width: 100px" onclick="addOffer('<%= category._id %>')">
                          Add Offer
                        </button>

                        <%}else{%>
                        <button class="btn btn-warning" style="width: 100px" onclick="removeOffer('<%= category._id %>')">
                          Remove
                        </button>
                        <%}%>
                      </div>
                    </td>

                    <td>
                      <% if (category.isListed) { %>
                        <span class="badge alert-success">Listed</span>
                      <% } else { %>
                        <span class="badge alert-danger">Unlisted</span>
                      <% } %>
                    </td>
                    <td>
                      <div class="d-flex flex-column">
                        <% if (category.isListed) { %>
                        <button class="btn btn-danger" style="width: 80px" role="button">
                          <a href="/admin/listCategory?id=<%=category._id%>">Unlist</a>
                        </button>
                        <% } else { %>
                        <button class="btn btn-success" style="width: 80px" role="button">
                          <a href="/admin/unlistCategory?id=<%=category._id%>">List</a>
                        </button>
                        <% } %>
                      </div>
                    </td>
                    <td class="text-center">
                      <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-info" style="width: 60px;">
                        Edit
                      </a>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="8" class="text-center text-muted">
                    No categories found.
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Pagination Section -->
    <div class="pagination-container">
      <div class="pagination">
        <% if (currentPage > 1) { %>
          <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } else { %>
          <span class="disabled">&laquo; Previous</span>
        <% } %>
        <% for(let i = 1; i <= totalPages; i++) { %>
          <% if(i === currentPage) { %>
            <span class="current-page"><%= i %></span>
          <% } else { %>
            <a href="?page=<%= i %>"><%= i %></a>
          <% } %>
        <% } %>
        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } else { %>
          <span class="disabled">Next &raquo;</span>
        <% } %>
      </div>
    </div>
  </section>

  <!-- SweetAlert2 JS -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <!-- jQuery -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>

    function handleFormSubmit(event){

        event.preventDefault();
        if(!validateForm()){
            return 
        }
        const name = document.getElementsByName("name")[0].value;
        const description = document.getElementById("descriptionId").value;

        fetch('/admin/addCategory',{
          method:'POST',
          headers:{
            'content-type':'application/json'
          },
          body:JSON.stringify({name,description})
        })
        .then(response =>{
          if(!response.ok){
            return response.json().then(err=>{
              throw new Error(err.error);
            })
          }
          return response.json();
        })
        .then(data=>{
          location.reload();
        })
        .catch(error=>{
          if(error.message === "Category already exist"){
            
            Swal.fire({

              icon:'error',
              title:"OOPS!",
              text:"Category already exist"

            })
          }else{

            Swal.fire({
              icon:'error',
              title:"OOPS!",
              text:"An Error Occured While adding Category"
            });
          }
        });
    }

    function validateForm (){
        clearErrorMessages();
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();
        isValid = true;

        if(name === ""){
            displayErrorMessage("name-error","Please enter a name");
            isValid = false
        }else if(!/^[a-zA-Z\s]+$/.test(name)){
            displayErrorMessage("name-error","Category name should contain only alphabets")
            isValid = false
        }
        if(description===""){
          displayErrorMessage("description-error","Please enter a description")
          isValid = false
        }
        return isValid;
    } 


    function displayErrorMessage(elementId,message){
      var errorElement = document.getElementById(elementId)
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages(){
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach((element)=>{
        element.innerText="";
        element.style.display="none"
      });
    }

     async function addOffer(categoryId){
      const {value:amount} = await Swal.fire({
        title:"Offer in Percentage",
        input:"number",
        inputLabel:"Percentage",
        inputPlaceholder:"%",
      });

      if(amount){

        try {
          const response = await fetch("/admin/addCategoryOffer" , {
            method:"POST",
            headers:{
              'content-type':"application/json",
            },
            body:JSON.stringify({
              percentage:amount,
              categoryId:categoryId,
            }),
          });

          const data = await response.json();
          if(response.ok && data.status === true){
            Swal.fire(
              "Offer added",
              "Offer has been Added",
              "Success"
            ).then(()=>{
              location.reload();
            })
          }else{
            Swal.fire("Failed", data.message || "Adding Offer Failed","error");
          }

        } catch (error) {
          Swal.fire(
            "Error",
            "Error Occured while adding Offer",
            "error"
          );
          console.log("Error adding offer",error);          
        }

      }

     }
    
     
    async function removeOffer(categoryId){
      try {
        const response = await fetch("/admin/removeCategoryOffer" , {
          method:"POST",
          headers:{
            'content-type': "application/json"
          },
          body:JSON.stringify({
            categoryId:categoryId,
          })
        })

        const data = await response.json();

        if(response.ok && data.status === true){
          Swal.fire(
            "Offer Removed",
            "Offer has been removed",
            "success"
          ).then(()=>{
            location.reload();
          });

        }else{
          Swal.fire("Failed", data.message || "Removing Offer Failed", "error");
        }

      } catch (error) {
        Swal.fire(
          "Error",
          "error occured while removing the offer",
          "error"
        );
        console.error("Error in removing offer",error);
      }
    } 



  </script>
  <script>
    $(document).ready(function() {
      // Listen for keyup events on the search input
      $("#searchInput").on("keyup", function() {
        var searchTerm = $(this).val();  // Get the current search term
        
        $.ajax({
          url: "/admin/category",  // same endpoint as before
          method: "GET",
          data: { search: searchTerm },
          dataType: "json",  // expect a JSON response
          success: function(data) {
            var rows = "";
            // Loop through each category in the returned JSON data
            data.categories.forEach(function(category, index) {
              rows += "<tr>";
              rows += "<td class='text-center'>" + (index + 1) + "</td>";
              rows += "<td>" + category.name + "</td>";
              rows += "<td>" + category.description + "</td>";
              rows += "<td>" + (category.categoryOffer && category.categoryOffer > 0 ? category.categoryOffer + "%" : "0%") + "</td>";
              
              // Offer button column
              rows += "<td><div class='d-flex flex-column'>";
              if (!category.categoryOffer || category.categoryOffer === 0) {
                rows += "<button class='btn btn-info' style='width: 100px' onclick=\"addOffer('" + category._id + "')\">Add Offer</button>";
              } else {
                rows += "<button class='btn btn-info' style='width: 100px' onclick=\"removeOffer('" + category._id + "')\">Remove</button>";
              }
              rows += "</div></td>";
              
              // Status column
              rows += "<td>";
              if (category.isListed) {
                rows += "<span class='badge alert-success'>Listed</span>";
              } else {
                rows += "<span class='badge alert-danger'>Unlisted</span>";
              }
              rows += "</td>";
              
              // List/Unlist column
              rows += "<td><div class='d-flex flex-column'>";
              if (category.isListed) {
                rows += "<button class='btn btn-danger' style='width: 80px' role='button'><a href='/admin/listCategory?id=" + category._id + "'>Unlist</a></button>";
              } else {
                rows += "<button class='btn btn-success' style='width: 80px' role='button'><a href='/admin/unlistCategory?id=" + category._id + "'>List</a></button>";
              }
              rows += "</div></td>";
              
              // Edit column
              rows += "<td class='text-center'><a href='/admin/category/" + category._id + "/edit' class='btn btn-info' style='width: 60px;'>Edit</a></td>";
              rows += "</tr>";
            });
            // Update the table body with the new rows
            $("#categoryTableBody").html(rows);
          },
          error: function(err) {
            console.error("Error fetching categories", err);
          }
        });
      });
    });
  </script>
  

<%- include("../../views/partials/admin/footer") %>
</body>
