<%- include("../../views/partials/admin/header") %>
<%- include("../../views/partials/admin/sidebar", { activePage: '' } ) %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
  <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
  <!-- Include Font Awesome for the delete icon -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
  
<style>
  .content-main{
    padding: 20px;
  }
  #sizesContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
  }
  .size-card {
    border: 1px solid #ccc;
    border-radius: 6px;
    width: 120px;
    padding: 10px;
    text-align: center;
    transition: box-shadow 0.3s ease;
  }
  .size-card:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  }
  .size-card.active {
    border-color: #007bff;
    box-shadow: 0 2px 8px rgba(0,123,255,0.4);
  }
  .size-card input[type="number"] {
    width: 100%;
    margin-top: 10px;
  }

  .final-cropped {
      display: none;
      margin-top: 10px;
      max-width: 50%;
      border: 1px solid #ddd;
      border-radius: 4px;
    }
    .image-cropper {
      display: none;
      margin-top: 10px;
      width: 100%;
    }

    .error-message{
      color: red;
    }
  
  /* Additional custom layout styles */
  .full-width-row {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 20px;
  }
  .full-width-row > div {
    padding: 0 10px;
  }
  .col-third {
    flex: 0 0 33.33%;
  }
  .col-quarter {
    flex: 0 0 25%;
  }
  .col-half {
    flex: 0 0 50%;
  }
  .mb-4 {
    margin-bottom: 20px;
  }
</style>
  
<section class="content-main">
  <div class="row">
    <div class="col-9">
      <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
      </div>
    </div>
    <div class="col-lg-12">
      <div class="card mb-4">
        <div class="card-body">
          <form method="post" action="/admin/EditProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateAndSubmit()">
            
            <!-- First Row: Product Name, Brand, and Category -->
            <div class="full-width-row mb-4">
              <div class="col-third">
                <label for="product_name" class="form-label">Product Name</label>
                <input type="text" placeholder="Type here" name="productName" value="<%= product.productName %>" class="form-control border" id="product_name">
                <div id="productName-error" class="error-message"></div>
              </div>
              <div class="col-third">
                <label class="form-label">Brand</label>
                <select class="form-select border" name="brand">
                  <% for(let i = 0; i < brand.length; i++){ %>
                    <option value="<%= brand[i].brandName %>" <%= product.brand === brand[i].brandName ? "selected" : "" %>>
                      <%= brand[i].brandName %>
                    </option>
                  <% } %>
                </select>
                <div id="brand-error" class="error-message"></div>
              </div>
              <div class="col-third">
                <label class="form-label">Category</label>
                <select class="form-select border" name="category">
                  <% for(let i = 0; i < cat.length; i++){ %>
                    <option value="<%= cat[i]._id %>" <%= (product.category && product.category._id.toString() === cat[i]._id.toString()) ? "selected" : "" %>>
                      <%= cat[i].name %>
                    </option>
                  <% } %>
                </select>
                <div id="category-error" class="error-message"></div>
              </div>
            </div>
            
            <!-- Second Row: Full Description, Regular Price, Sale Price, Color -->
            <div class="full-width-row mb-4">
              <div class="col-quarter">
                <label class="form-label">Full Description</label>
                <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"><%= product.description %></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="col-quarter">
                <label class="form-label">Regular Price</label>
                <input placeholder="₹" name="regularPrice" type="text" value="<%= product.regularPrice %>" class="form-control border">
                <div id="regularPrice-error" class="error-message"></div>
              </div>
              <div class="col-quarter">
                <label class="form-label">Sale Price</label>
                <input placeholder="₹" name="salePrice" type="text" value="<%= product.salePrice %>" class="form-control border">
                <div id="salePrice-error" class="error-message"></div>
              </div>
              <div class="col-quarter">
                <label class="form-label">Color</label>
                <input name="color" type="text" value="<%= product.color %>" class="form-control border">
                <div id="color-error" class="error-message"></div>
              </div>
            </div>
            
            <!-- Sizes & Stock Section (remains unchanged) -->
            <div class="mb-4">
              <label class="form-label">Sizes &amp; Stock</label>
              <div id="sizesContainer">
                <% [5,6,7,8,9,10].forEach(function(sz) { 
                     let variant = null;
                     if(product.variants){
                       variant = product.variants.find(v => v.size == sz);
                     }
                %>
                  <div class="size-card <%= variant ? 'active' : '' %>" id="card_<%= sz %>">
                    <div>
                      <input type="checkbox" name="size" id="size_<%= sz %>" value="<%= sz %>" onchange="toggleStockInput(this, '<%= sz %>')" <%= variant ? 'checked' : '' %>>
                      <label for="size_<%= sz %>">Size <%= sz %></label>
                    </div>
                    <input type="number" name="stock_<%= sz %>" placeholder="Enter stock" min="0" <%= variant ? '' : 'disabled' %> value="<%= variant ? variant.stock : '' %>">
                  </div>
                <% }); %>
              </div>
              <div id="size-error" class="error-message"></div>
            </div>
            
            <!-- Images Section: Two images per row -->
            <div class="card mb-2">
              <div class="card-header">
                <h4>Choose Images</h4>
              </div>
              <div class="border row">
                <div id="addedImagesContainer" class="thumbnails-container"></div>
              </div>
              <% let maxImages = 4; %>
              <div class="card-body">
                <% for (let i = 0; i < maxImages; i++) { %>
                  <% if(i % 2 === 0){ %>
                    <div class="row mb-4">
                  <% } %>
                  <div class="col-half" style="position: relative;">
                    <div class="card-body align-items-center">
                      <img src="" alt="Preview" id="imgView<%= i+1 %>" class="img-fluid">
                      <input class="form-control"
                             type="file"
                             name="image<%= i+1 %>"
                             id="input<%= i+1 %>"
                             accept="image/png, image/jpeg, image/jpg"
                             onchange="viewImage(event, <%= i+1 %>)">
                      <% if (product.productImage[i]) { %>
                        <img src="/uploads/product-images/<%= product.productImage[i] %>" alt="Product Image" id="finalCropped<%= i+1 %>" class="final-cropped img-fluid" style="display: inline;">
                        <i onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')" style="position: absolute; top: 10px; right: 10px; cursor: pointer; color: red; font-size: 20px;" class="fas fa-times"></i>
                      <% } else { %>
                        <img src="" alt="" id="finalCropped<%= i+1 %>" class="final-cropped img-fluid">
                      <% } %>
                      <div id="images-error<%= i+1 %>" class="error-message"></div>
                    </div>
                    <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;" id="cropperContainer<%= i+1 %>">
                      <img src="" id="croppedImg<%= i+1 %>" alt="">
                      <button type="button" id="saveButton<%= i+1 %>" class="btn btn-primary">Save</button>
                    </div>
                  </div>
                  <% if(i % 2 === 1 || i === maxImages - 1){ %>
                    </div>
                  <% } %>
                <% } %>
              </div>
            </div>
            
            <div>
              <button class="btn btn-success btn-lg" type="button" onclick="validateAndSubmit()">Update</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>
  
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>
  
<script>
  // Toggle stock input and active styling for size cards
  function toggleStockInput(checkbox, size) {
    const stockInput = document.querySelector(`input[name="stock_${size}"]`);
    const card = document.getElementById("card_" + size);
    if (checkbox.checked) {
      stockInput.disabled = false;
      stockInput.required = true;
      card.classList.add("active");
    } else {
      stockInput.disabled = true;
      stockInput.required = false;
      stockInput.value = "";
      card.classList.remove("active");
    }
  }
  
  function validateAndSubmit(){
    if(validateForm()){
      document.forms[0].submit();
    }
  }
  
  // The same image cropping, preview, and file select functions as in product-add.ejs
  function viewImage(event, index) {
    const input = event.target;
    if (!input.files || input.files.length === 0) return;
    const file = input.files[0];
  
    const reader = new FileReader();
    reader.onload = function () {
      const dataUrl = reader.result;
      const image = document.getElementById("imgView" + index);
      image.src = dataUrl;
  
      image.onload = function () {
        if (image.cropper) {
          image.cropper.destroy();
        }
        const cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 1,
          guides: true,
          background: false,
          autoCropArea: 1,
          zoomable: true
        });
  
        const cropperContainer = document.getElementById("cropperContainer" + index);
        cropperContainer.style.display = "block";
  
        let saveButton = document.getElementById("saveButton" + index);
        let newSaveButton = saveButton.cloneNode(true);
        saveButton.parentNode.replaceChild(newSaveButton, saveButton);
  
        newSaveButton.addEventListener("click", function () {
          const croppedCanvas = cropper.getCroppedCanvas();
          if (!croppedCanvas) {
            console.error("Cropped canvas not available.");
            return;
          }
          const finalCropped = document.getElementById("finalCropped" + index);
          finalCropped.src = croppedCanvas.toDataURL("image/jpeg", 1.0);
          finalCropped.style.display = "inline";
  
          const timestamp = new Date().getTime();
          const filename = `cropped-img-${timestamp}-${index}.png`;
  
          croppedCanvas.toBlob(blob => {
            if (blob) {
              const fileInput = document.getElementById("input" + index);
              const imgFile = new File([blob], filename, { type: blob.type });
              const fileList = new DataTransfer();
              fileList.items.add(imgFile);
              fileInput.files = fileList.files;
            }
          }, "image/png");
  
          cropper.destroy();
          cropperContainer.style.display = "none";
        });
      };
    };
    reader.readAsDataURL(file);
  }
  
  const selectedImages = [];
  document.getElementById("input1").addEventListener("change", handleFileSelect);
  document.getElementById("input2").addEventListener("change", handleFileSelect);
  document.getElementById("input3").addEventListener("change", handleFileSelect);
  document.getElementById("input4").addEventListener("change", handleFileSelect);
  
  function handleFileSelect(event){
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;
  
    for(let i = 0; i < files.length; i++){
      const file = files[i];
      selectedImages.push(file);
      const thumbnail = document.createElement("div");
      thumbnail.classList.add("thumbnail");
  
      const img = document.createElement("img");
      img.src = URL.createObjectURL(file);
      img.alt = "thumbnail";
      img.style.width = "50px";
      img.style.height = "auto";
      const removeIcon = document.createElement("span");
      removeIcon.classList.add("remove-icon");
      removeIcon.innerHTML = "&times;";
      removeIcon.addEventListener("click", function(){
        const index = selectedImages.indexOf(file);
        if(index !== -1){
          selectedImages.splice(index, 1);
        }
        thumbnail.remove();
      });
  
      thumbnail.appendChild(img);
      thumbnail.appendChild(removeIcon);
      addedImagesContainer.appendChild(thumbnail);
    }
  }
  
  function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const brand = document.getElementsByName('brand')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementsByName('category')[0].value;
    let isValid = true;
  
    if (name.trim() === "") {
      displayErrorMessage('productName-error', 'Please enter a product name.');
      isValid = false;
    } else if (!/^[a-zA-Z0-9\s]+$/.test(name.trim())) {
      displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters, numbers, or spaces.');
      isValid = false;
    }
  
    if (description.trim() === "") {
      displayErrorMessage('description-error', 'Please enter a product description.');
      isValid = false;
    } else if (description.trim() === '') {
      displayErrorMessage('description-error', 'Product description cannot be empty.');
      isValid = false;
    }
  
    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
      displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
      isValid = false;
    }
  
    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
      displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
      isValid = false;
    }
  
    if (parseFloat(price) <= parseFloat(saleprice)) {
      displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
      isValid = false;
    }
  
    if (color.trim() === "") {
      displayErrorMessage('color-error', 'Please enter a color.');
      isValid = false;
    }
  
    const existingImageCount = <%= product.productImage.length %>;
    if (existingImageCount === 0) {
      let anyFileChosen = false;
      for (let i = 1; i <= 4; i++) {
        let input = document.getElementById("input" + i);
        if (input && input.files && input.files.length > 0) {
          anyFileChosen = true;
          break;
        }
      }
      if (!anyFileChosen) {
        displayErrorMessage("images-error", 'Please select at least one image.');
        isValid = false;
      }
    }

    // image‐type check
    const allowed = ['image/png', 'image/jpeg', 'image/jpg'];
    for (let i = 1; i <= 4; i++) {
    const input = document.getElementById(`input${i}`);
    if (input.files.length > 0) {
      if (!allowed.includes(input.files[0].type)) {
        // target the matching error div
        displayErrorMessage(`images-error${i}`,
                            'Invalid Format! Only JPG and PNG images are allowed.');
        return false;
      }
    }
  }
  
    return isValid;
  }
  
  function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
  }
  
  function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
      element.innerText = '';
    });
    //for image error hide by id
    for (let i = 1; i <= 4; i++) {
    const el = document.getElementById(`images-error${i}`);
    if (el) el.innerText = '';
    }
  }
  
  const urlParams = new URLSearchParams(window.location.search);
  if (urlParams.get('success') === 'true') {
    Swal.fire({
      title: 'Product updated successfully!',
      text: 'Your changes have been saved to the database.',
      icon: 'success',
      confirmButtonText: 'OK'
    });
  }
  
  function deleteSingleImage(imageId, productId) {
    $.ajax({
      url: "/admin/deleteImage",
      method: 'post',
      data: { imageNameToServer: imageId, productIdToServer: productId },
      success: (response) => {
        if (response.status === true) {
          window.location.reload();
        }
      }
    });
  }
</script>
