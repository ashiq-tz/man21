<%- include("../../views/partials/user/header") %>

<style>
  .checkout-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 30px 20px;
  }
  .checkout-row {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
  }
  /* Address Section */
  .address-section {
    flex: 1 1 60%;
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
  }
  .address-section h4 {
    font-size: 1.2rem;
    margin-bottom: 15px;
  }
  .address-box {
    border: 1px solid #ddd;
    border-radius: 6px;
    padding: 15px;
    margin-bottom: 15px;
    cursor: pointer;
    position: relative;
  }
  .address-box.selected {
    border: 2px solid #3b74f2;
  }
  .address-box .address-details {
    font-size: 0.95rem;
    color: #555;
    line-height: 1.4;
  }
  .address-actions {
    margin-top: 10px;
  }
  /* Order Summary Section */
  .order-summary-section {
    flex: 1 1 35%;
    min-width: 300px;
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
  }
  .order-summary-section h4 {
    font-size: 1.2rem;
    margin-bottom: 15px;
  }
  .order-items {
    margin-top: 15px;
  }
  .order-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }
  .order-item img {
    width: 60px;
    height: 60px;
    object-fit: cover;
    margin-right: 10px;
  }
  .coupon-section {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
  }
  .payment-methods {
    margin-top: 15px;
  }
  .place-order-btn {
    width: 100%;
    margin-top: 20px;
  }
  .payment-methods input[disabled] + label {
  opacity: 0.6;
  cursor: not-allowed;
}
</style>

<div class="checkout-container">
  <h2>Checkout</h2>
  <div class="checkout-row">
    <!-- LEFT: Address Section -->
    <div class="address-section">
      <h4>Select Shipping Address</h4>
      <% if (userAddress && userAddress.address && userAddress.address.length > 0) { %>
        <% userAddress.address.forEach((addr, index) => { %>
          <div class="address-box <%= index === 0 ? 'selected' : '' %>" data-address-id="<%= addr._id %>">
            <div class="address-details">
              <strong><%= addr.addressType %></strong><br>
              <%= addr.name %><br>
              <%= addr.city %>, <%= addr.state %> - <%= addr.pincode %><br>
              <%= addr.landmark %><br>
              Phone: <%= addr.phone %> / <%= addr.altPhone %>
            </div>
            <div class="address-actions">
              <!-- Include redirect query parameter -->
              <a href="/editAddress?id=<%= addr._id %>&redirect=checkout" class="btn btn-outline-secondary btn-sm">Edit</a>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p>No saved addresses found.</p>
      <% } %>
      <!-- Add New Address link with redirect query parameter -->
      <a href="/addAddress?redirect=checkout" class="btn btn-primary mt-2">Add New Address</a>
    </div>

    <!-- RIGHT: Order Summary Section -->
    <div class="order-summary-section">
      <h4>Order Summary</h4>

      
      <%if (cart && cart.items && cart.items.length > 0) { %>
        <div class="order-items">
          <% cart.items.forEach(item => { 
            const product = item.productId;
          %>  
            <div class="order-item">
              <div>
                <img 
                  src="/uploads/product-images/<%= product.productImage && product.productImage.length ? product.productImage[0] : 'placeholder.jpg' %>" 
                  alt="<%= product.productName %>"
                />
                <span><%= product.productName %> (Size <%= item.size %>) x <%= item.quantity %></span>
                <span><%= item.productId.productName %> (Size <%= item.size %>) x <%= item.quantity %></span>

              </div>
              <!-- <div>₹<%= item.price.toLocaleString('en-IN') %> × <%= item.quantity %></div> -->
              <div>₹<%= item.totalPrice.toLocaleString('en-IN') %></div>
            </div>
          <% }) %>
        </div>
        <div class="coupon-section">
          <input type="text" class="form-control" id="couponCode" placeholder="Enter Coupon Code" />
          <button class="btn btn-secondary" id="applyCouponBtn">Apply</button>
          <button class="btn btn-outline-danger" id="removeCouponBtn" style="display:none;">Remove</button>
        </div>
        <div class="summary-line d-flex justify-content-between">
          <span>Subtotal:</span>
          <span id="subtotal-value">₹<%= subtotal.toLocaleString('en-IN') %></span>
        </div>
        <div class="summary-line d-flex justify-content-between">
          <span>You Saved:</span>
          <span id="discount-value">₹<%= youSaved.toLocaleString('en-IN') %></span>
        </div>

        <div class="summary-line d-flex justify-content-between">
          <span>Coupon Savings:</span>
          <span id="coupon-saved-value">₹0</span>
        </div>

        <div class="summary-line d-flex justify-content-between">
          <span>Delivery Fee:</span>
          <span class="text-secondary">Free Delivery</span>
        </div>
        <hr />
        <div class="summary-line d-flex justify-content-between">
          <strong>Total:</strong>
          <strong id="total-value">₹<%= subtotal.toLocaleString('en-IN') %></strong>
        </div>
        <div class="payment-methods">
          <h5>Payment Method</h5>
          <div>

            <input 
            type="radio" 
            name="paymentMethod" 
            id="payCOD" 
            value="COD" 
            <% if (disableCOD) { %> disabled <% } %>
            checked 
          />

          <label for="payCOD">
            Cash on Delivery
            <% if (disableCOD) { %>
              <small class="text-danger">(only up to ₹5,000)</small>
            <% } %>
          </label>

          </div>
          <div>

            <input type="radio" 
            name="paymentMethod" 
            id="payRazorpay" 
            value="Razorpay"
            <%= disableCOD ? 'checked' : '' %> 
             />
            <label for="payRazorpay">Razorpay</label>
          </div>
        </div>

        <button 
        class="btn btn-success place-order-btn" 
        id="placeOrderBtn"
        <%= disableCOD ? '' : '' %>
        >
          Place Order
        </button>
      <% } else { %>
        <p>Your cart is empty.</p>
      <% } %>
    </div>
  </div>
</div>

<%- include("../../views/partials/user/footer") %>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
  // Load addresses from the server-provided object
  let addresses = <%- JSON.stringify(userAddress && userAddress.address ? userAddress.address : []) %>;
  let selectedAddressId = addresses.length ? addresses[0]._id : null;
  
  // Add click event listeners to each address box to mark it as selected
  document.querySelectorAll('.address-box').forEach(box => {
    box.addEventListener('click', function() {
      document.querySelectorAll('.address-box').forEach(b => b.classList.remove('selected'));
      this.classList.add('selected');
      selectedAddressId = this.getAttribute('data-address-id');
    });
  });

  //Coupon Logicss
  const couponSavedEl = document.getElementById('coupon-saved-value');
  const totalEl    = document.getElementById('total-value');
  const applyBtn   = document.getElementById('applyCouponBtn');
  const removeBtn  = document.getElementById('removeCouponBtn');
  const codeInput  = document.getElementById('couponCode');

  let originalSubtotal = <%= subtotal %>;
  let netTotal = originalSubtotal;
  let appliedCoupon = null;
  let discountAmount = 0;

  // Apply coupon
  applyBtn.addEventListener('click', async () => {
    if (appliedCoupon) return;
    const code = codeInput.value.trim();
    if (!code) {
  return Swal.fire({
    icon: 'warning',
    title: 'Hold on…',
    text: 'Please enter a coupon code'
  });
}


    const resp = await fetch('/validate-coupon', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({ code, cartTotal: originalSubtotal })
    });
    const data = await resp.json();

    if (!data.valid) {
  return Swal.fire({
    icon: 'error',
    title: 'Coupon Error',
    text: data.message
  });
}


    // Success!
    appliedCoupon  = code.toUpperCase();
    discountAmount = data.offerPrice;
    netTotal = originalSubtotal - discountAmount;

    couponSavedEl.textContent = `₹${discountAmount.toLocaleString('en-IN')}`;
    totalEl.textContent       = `₹${(originalSubtotal - discountAmount).toLocaleString('en-IN')}`;


    applyBtn.disabled      = true;
    codeInput.disabled     = true;
    removeBtn.style.display = 'inline-block';
  });

  // Remove coupon
  removeBtn.addEventListener('click', () => {
    appliedCoupon  = null;
    discountAmount = 0;
    netTotal = originalSubtotal;

    couponSavedEl.textContent = `₹0`;
    totalEl.textContent       = `₹${originalSubtotal.toLocaleString('en-IN')}`;

    applyBtn.disabled   = false;
    codeInput.disabled  = false;
    codeInput.value     = '';
    removeBtn.style.display = 'none';
  });



  // Handle Place Order button click
  document.getElementById('placeOrderBtn').addEventListener('click', async function() {
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
    const couponCode = appliedCoupon;

    if (!selectedAddressId) {
  return Swal.fire({
    icon: 'warning',
    title: 'Missing Address',
    text: 'Select a shipping address before placing your order.'
  });
}


    if (paymentMethod === 'COD') {
   fetch('/placeOrder', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({
         addressId: selectedAddressId,
         paymentMethod,
         couponCode })
    })
    .then(res => res.json())
    .then(data => {
      if(data.success) {
        window.location.href = '/orderSuccess?groupOrderId=' + data.groupOrderId;
      } else {
        alert(data.message || 'Something went wrong');
      }
    })
    .catch(err => {
      console.error('Error placing order:', err);
      alert('Error placing order. Please try again.');
    });
  }

  else if (paymentMethod === 'Razorpay'){
  // --- 2) Razorpay flow

  const razorResp = await fetch('/create-razorpay-order', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
          amount: netTotal,
          couponCode: appliedCoupon 
        })
      });
      const { order, groupOrderId } = await razorResp.json();

  // 2.2 open checkout
  const options = {
    key: "rzp_test_Fwu0LGrzQ8ECFQ",
    amount: order.amount,
    currency: order.currency,
    order_id: order.id,
    name: "MAN 21",
    description: "Order #" + order.receipt,
    handler: async function (response) {
      // on payment success → verify on server
      const verifyRes = await fetch('/verify-payment', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify({
          razorpay_order_id:   response.razorpay_order_id,
          razorpay_payment_id: response.razorpay_payment_id,
          razorpay_signature:  response.razorpay_signature,
          addressId: selectedAddressId, 
          couponCode,
          groupOrderId
        })
      })
      const verifyData = await verifyRes.json()
      if (verifyData.success) {
        window.location = '/orderSuccess?groupOrderId=' + verifyData.groupOrderId;
      } else {
        alert(verifyData.message || "Payment verification failed")
      }
    },
    prefill: {
      // optional: fill user name, email, phone
    },
    theme: { color: "#3b74f2" }
  }
  const rzp = new Razorpay(options)
  rzp.on('payment.failed', function (response) {
  // send the user to our failure page, carrying all the info we need
  window.location.href =
    '/orderFailure?groupOrderId=' + groupOrderId +
    '&amount='   + netTotal +
    '&addressId='+ selectedAddressId +
    '&couponCode=' + (couponCode || '');
 }); 
  rzp.open()
}

})

</script>
