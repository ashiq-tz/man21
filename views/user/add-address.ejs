<%- include("../../views/partials/user/header") %>
<head>
  <style>
    .error-msg {
      color: red;
      font-size: 0.75rem;
      display: none;
      margin-top: 5px;
      text-align: left;
      width: 100%;
    }
  </style>
</head>
<div class="container mt-4">
  <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Create User Address</h3>
  <form id="addressForm" method="POST" action="/addAddress" class="border-0 p-3">
    <input type="hidden" name="redirect" value="<%= typeof redirect !== 'undefined' ? redirect : '' %>">

    <div class="row mb-50">
      <div class="form-group col-md-4">
        <label for="addressType">Address Type:</label>
        <input type="text" class="form-control border-3" id="addressType" name="addressType" />
        <div id="errorAddressType" class="error-msg"></div>
      </div>
      <div class="form-group col-md-4">
        <label for="name">Name:</label>
        <input type="text" class="form-control border-3" id="name" name="name" />
        <div id="errorName" class="error-msg"></div>
      </div>
      <div class="form-group col-md-4">
        <label for="city">City:</label>
        <input type="text" class="form-control border-3" id="city" name="city" />
        <div id="errorCity" class="error-msg"></div>
      </div>
    </div>

    <div class="row mb-3">
      <div class="form-group col-md-4">
        <label for="landmark">Landmark:</label>
        <input type="text" class="form-control border-3" id="landmark" name="landmark" />
        <div id="errorLandmark" class="error-msg"></div>
      </div>
      <div class="form-group col-md-4">
        <label for="state">State:</label>
        <input type="text" class="form-control border-3" id="state" name="state" />
        <div id="errorState" class="error-msg"></div>
      </div>
      <div class="form-group col-md-4">
        <label for="pincode">Pincode:</label>
        <input type="text" class="form-control border-3" id="pincode" name="pincode" />
        <div id="errorPincode" class="error-msg"></div>
      </div>
    </div>

    <div class="row mb-3">
      <div class="form-group col-md-4">
        <label for="phone">Phone:</label>
        <input type="text" class="form-control border-3" id="phone" name="phone" />
        <div id="errorPhone" class="error-msg"></div>
      </div>
      <div class="form-group col-md-4">
        <label for="altPhone">Alternate Phone:</label>
        <input type="text" class="form-control border-3" id="altPhone" name="altPhone" />
        <div id="errorAltPhone" class="error-msg"></div>
      </div>
    </div>

    <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
  </form>
</div>

<%- include("../../views/partials/user/footer") %>

<script>
  // Field elements
  const addressTypeId = document.getElementById('addressType');
  const nameId = document.getElementById('name');
  const cityId = document.getElementById('city');
  const landmarkId = document.getElementById('landmark');
  const stateId = document.getElementById('state');
  const pincodeId = document.getElementById('pincode');
  const phoneId = document.getElementById('phone');
  const altPhoneId = document.getElementById('altPhone');
  const addressForm = document.getElementById('addressForm');

  // Error elements
  const errorAddressType = document.getElementById('errorAddressType');
  const errorName = document.getElementById('errorName');
  const errorCity = document.getElementById('errorCity');
  const errorLandmark = document.getElementById('errorLandmark');
  const errorState = document.getElementById('errorState');
  const errorPincode = document.getElementById('errorPincode');
  const errorPhone = document.getElementById('errorPhone');
  const errorAltPhone = document.getElementById('errorAltPhone');

  // Patterns
  const namePattern = /^[A-Za-z\s]+$/;
  const pincodePattern = /^\d{6}$/;
  const phonePattern = /^\d{10}$/;

  function validateAddressType() {
    const val = addressTypeId.value.trim();
    if (!val) {
      errorAddressType.style.display = 'block';
      errorAddressType.innerText = 'Address Type is required';
    } else {
      errorAddressType.style.display = 'none';
      errorAddressType.innerText = '';
    }
  }

  function validateName() {
    const val = nameId.value.trim();
    if (!val) {
      errorName.style.display = 'block';
      errorName.innerText = 'Name is required';
    } else if (!namePattern.test(val)) {
      errorName.style.display = 'block';
      errorName.innerText = 'Name should contain alphabets and spaces only';
    } else {
      errorName.style.display = 'none';
      errorName.innerText = '';
    }
  }

  function validateCity() {
    const val = cityId.value.trim();
    if (!val) {
      errorCity.style.display = 'block';
      errorCity.innerText = 'City is required';
    } else if (!namePattern.test(val)) {
      errorCity.style.display = 'block';
      errorCity.innerText = 'City should contain alphabets and spaces only';
    } else {
      errorCity.style.display = 'none';
      errorCity.innerText = '';
    }
  }

  function validateLandmark() {
    const val = landmarkId.value.trim();
    if (!val) {
      errorLandmark.style.display = 'block';
      errorLandmark.innerText = 'Landmark is required';
    } else if (!namePattern.test(val)) {
      errorLandmark.style.display = 'block';
      errorLandmark.innerText = 'Landmark should contain alphabets and spaces only';
    } else {
      errorLandmark.style.display = 'none';
      errorLandmark.innerText = '';
    }
  }

  function validateState() {
    const val = stateId.value.trim();
    if (!val) {
      errorState.style.display = 'block';
      errorState.innerText = 'State is required';
    } else if (!namePattern.test(val)) {
      errorState.style.display = 'block';
      errorState.innerText = 'State should contain alphabets and spaces only';
    } else {
      errorState.style.display = 'none';
      errorState.innerText = '';
    }
  }

  function validatePincode() {
    const val = pincodeId.value.trim();
    if (!val) {
      errorPincode.style.display = 'block';
      errorPincode.innerText = 'Pincode is required';
    } else if (!pincodePattern.test(val)) {
      errorPincode.style.display = 'block';
      errorPincode.innerText = 'Pincode should be a 6-digit number';
    } else {
      errorPincode.style.display = 'none';
      errorPincode.innerText = '';
    }
  }

  function validatePhone() {
    const val = phoneId.value.trim();
    if (!val) {
      errorPhone.style.display = 'block';
      errorPhone.innerText = 'Phone is required';
    } else if (!phonePattern.test(val)) {
      errorPhone.style.display = 'block';
      errorPhone.innerText = 'Phone should be a 10-digit number';
    } else {
      errorPhone.style.display = 'none';
      errorPhone.innerText = '';
    }
  }

  function validateAltPhone() {
    const val = altPhoneId.value.trim();
    if (!val) {
      errorAltPhone.style.display = 'block';
      errorAltPhone.innerText = 'Alternate phone is required';
    } else if (!phonePattern.test(val)) {
      errorAltPhone.style.display = 'block';
      errorAltPhone.innerText = 'Alternate phone should be a 10-digit number';
    } else if (val === phoneId.value.trim()) {
      errorAltPhone.style.display = 'block';
      errorAltPhone.innerText = 'Phone and alternate phone must be different';
    } else {
      errorAltPhone.style.display = 'none';
      errorAltPhone.innerText = '';
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    addressTypeId.addEventListener('input', validateAddressType);
    nameId.addEventListener('input', validateName);
    cityId.addEventListener('input', validateCity);
    landmarkId.addEventListener('input', validateLandmark);
    stateId.addEventListener('input', validateState);
    pincodeId.addEventListener('input', validatePincode);
    phoneId.addEventListener('input', validatePhone);
    altPhoneId.addEventListener('input', validateAltPhone);

    addressForm.addEventListener('submit', (e) => {
      validateAddressType(); validateName(); validateCity();
      validateLandmark(); validateState(); validatePincode();
      validatePhone(); validateAltPhone();

      if (
        errorAddressType.innerText || errorName.innerText || errorCity.innerText ||
        errorLandmark.innerText || errorState.innerText || errorPincode.innerText ||
        errorPhone.innerText || errorAltPhone.innerText
      ) {
        e.preventDefault();
      }
    });
  });
</script>
